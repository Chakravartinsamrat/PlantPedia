{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyus\\\\Documents\\\\GitHub\\\\DBMSProject\\\\PlantPedia\\\\frontend\\\\src\\\\pages\\\\Plantdetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport tomatoImage from '../assests/plantImages/tomato.jpg';\nimport potatoImage from '../assests/plantImages/potato.jpg';\nimport carrotImage from '../assests/plantImages/carrot.jpg';\nimport broccoliImage from '../assests/plantImages/broccoli.jpg';\nimport onionImage from '../assests/plantImages/onion.jpg';\nimport eggplantImage from '../assests/plantImages/eggplant.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Plantdetails() {\n  _s();\n  const [data, setData] = useState([]);\n  const [expandedPlantId, setExpandedPlantId] = useState(null);\n  useEffect(() => {\n    console.log('Fetching data...');\n    fetch('http://localhost:8081/plantdetails').then(res => res.json()).then(data => {\n      console.log('Data fetched:', data);\n      setData(data);\n    }).catch(err => console.error('Error fetching data:', err));\n  }, []);\n  const toggleDetails = plantId => {\n    if (expandedPlantId === plantId) {\n      setExpandedPlantId(null);\n    } else {\n      setExpandedPlantId(plantId);\n    }\n  };\n  const getImageUrl = plantName => {\n    const imageMap = {\n      Potato: potatoImage,\n      Tomato: tomatoImage,\n      Carrot: carrotImage,\n      Onion: onionImage,\n      Broccoli: broccoliImage,\n      Eggplant: eggplantImage\n      // Add more mappings as needed\n    };\n    return imageMap[plantName] || 'https://via.placeholder.com/150';\n  };\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",\n      children: data.map((plant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border border-gray-300 rounded-lg bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cursor-pointer grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImageUrl(plant.name),\n            alt: `Image of ${plant.name}`,\n            className: \"h-32 w-32 rounded-full mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold text-2xl justify-self-center self-center\",\n            children: [\"Plant Name:\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hover:underline\",\n              children: plant.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 98\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Plantdetails, \"fRubF+mvRIoEQylqRzuqnjUtclQ=\");\n_c = Plantdetails;\nexport default Plantdetails;\nvar _c;\n$RefreshReg$(_c, \"Plantdetails\");","map":{"version":3,"names":["React","useEffect","useState","tomatoImage","potatoImage","carrotImage","broccoliImage","onionImage","eggplantImage","jsxDEV","_jsxDEV","Plantdetails","_s","data","setData","expandedPlantId","setExpandedPlantId","console","log","fetch","then","res","json","catch","err","error","toggleDetails","plantId","getImageUrl","plantName","imageMap","Potato","Tomato","Carrot","Onion","Broccoli","Eggplant","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","plant","index","src","name","alt","_c","$RefreshReg$"],"sources":["C:/Users/piyus/Documents/GitHub/DBMSProject/PlantPedia/frontend/src/pages/Plantdetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport tomatoImage from '../assests/plantImages/tomato.jpg';\r\nimport potatoImage from '../assests/plantImages/potato.jpg';\r\nimport carrotImage from '../assests/plantImages/carrot.jpg';\r\nimport broccoliImage from '../assests/plantImages/broccoli.jpg';\r\nimport onionImage from '../assests/plantImages/onion.jpg';\r\nimport eggplantImage from '../assests/plantImages/eggplant.jpg';\r\n\r\nfunction Plantdetails() {\r\n  const [data, setData] = useState([]);\r\n  const [expandedPlantId, setExpandedPlantId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('Fetching data...');\r\n    fetch('http://localhost:8081/plantdetails')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('Data fetched:', data);\r\n        setData(data);\r\n      })\r\n      .catch(err => console.error('Error fetching data:', err));\r\n  }, []);\r\n\r\n  const toggleDetails = (plantId) => {\r\n    if (expandedPlantId === plantId) {\r\n      setExpandedPlantId(null);\r\n    } else {\r\n      setExpandedPlantId(plantId);\r\n    }\r\n  };\r\n\r\n  const getImageUrl = (plantName) => {\r\n    const imageMap = {\r\n      Potato: potatoImage,\r\n      Tomato: tomatoImage,\r\n      Carrot: carrotImage,\r\n      Onion : onionImage,\r\n      Broccoli : broccoliImage,\r\n      Eggplant : eggplantImage\r\n      // Add more mappings as needed\r\n    };\r\n    return imageMap[plantName] || 'https://via.placeholder.com/150';\r\n  };\r\n\r\n  if (data.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n        {data.map((plant, index) => (\r\n          <div key={index} className=\"p-4 border border-gray-300 rounded-lg bg-gray-50\">\r\n            <div className=\"cursor-pointer grid grid-cols-2 gap-4\">\r\n              <img \r\n                src={getImageUrl(plant.name)} \r\n                alt={`Image of ${plant.name}`} \r\n                className=\"h-32 w-32 rounded-full mb-4\" \r\n              />\r\n              <div className=\"font-semibold text-2xl justify-self-center self-center\">Plant Name:<span className='hover:underline'>{plant.name}</span></div>\r\n              <button></button>\r\n              \r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Plantdetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}